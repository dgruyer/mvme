* Make a std::error_category for getaddrinfo (enum, category, make_error_code).
  It's needed for good winsock error reporting.

* Add NoIAck option to VMEConfig and use it in the MVLC setup code

* Polling udp::Impl stats (getLossCounters(), getPacketSizeCounters()) from the GUI is
  currently not taking the higher-level locks. This means the readout thread or a thread
  doing periodic polling can update those values concurrently to the GUI reading them.
  Either implement low level locks in the UDP code or use the higher level ones which
  currently are in MVLCObject.

* The windows usb::Impl::read() and the udp::Impl::read() calls on both systems can take
  longer than the user specified timeout as they are issuing multiple read/receive calls
  internally, each using the previously set timeout value. Document this behaviour and/or
  work around it by taking into account how much time has elapsed between each of the
  individual read/receive calls.

* Build a tool to verify incoming readout data. Check headers and pointers. Test this with
  different incoming event sizes.
  For the first pass it's ok to do this offline.

* Low Level MVLC Ethernet Debugging:

    ifconfig enp2s0 192.168.42.1 netmask 255.255.255.0 up
    arp -i enp2s0 -s 192.168.42.2 ab:cd:12:34:56:78

  Start wireshark or tcpdump in a second terminal window
    sudo tcpdump -i enp2s0 -vvXX

  Use netcat to generate an UDP packet containing "Hello, World!" as the payload.
    echo "Hello, world!" | netcat -u 192.168.42.2 9000

  To delete the arp entry:
    arp -i enp2s0 -d 192.168.42.2

---------------------------------------------------
* Data Format things

// Successful read
11:57:32: >>> Stack response from MVLC, size=2
  0: 0xf3000001 (4076863489 dec) Stack Result Buffer (len=1, stackNum=0, errorBits=none)
  1: 0x00000001 (1 dec)
<<< Stack response from MVLC


// Timeout
11:58:00: >>> Stack response from MVLC, size=2
  0: 0xf3100001 (4077912065 dec) Stack Result Buffer (len=1, stackNum=0, errorBits=timeout)
  1: 0xffffff03 (4294967043 dec)


// Two reads, 1st ok, 2nd with timeout
12:01:47: >>> Stack response from MVLC, size=3
  0: 0xf3100002 (4077912066 dec) Stack Result Buffer (len=2, stackNum=0, errorBits=timeout)
  1: 0x00000001 (1 dec)
  2: 0xffffff05 (4294967045 dec)


// Reversed
  12:03:02: >>> Stack response from MVLC, size=3
  0: 0xf3100002 (4077912066 dec) Stack Result Buffer (len=2, stackNum=0, errorBits=timeout)
  1: 0xffffff03 (4294967043 dec)
  2: 0x00000001 (1 dec)
