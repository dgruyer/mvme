* write
    write a16 d16 0x1234 0xabcd
    write a32 d16 0x12345678 0xabcd
    write a32 d32 0x12345678 0xabcdabcd
    write a16 d32 0x1234 0xabcdabcd
    write <amode> <dwidth> <address> <value>

* read
    read a32 d16 0x12345678
    read a16 0x1234
    read <amode> <dwidth> <address>

* wait
    # Wait for at least the specified time given in ms
    wait 1s
    wait 500ms
    wait <waitspec>

* marker
    marker 0x12345678  # add a 32 bit marker word

* blt/mblt (read only)
    blt a24 0x123456 200 # blockread amode address count
    bltfifo a32 0x12345678 20 # fiforead amode address count

    mblt a24 0x123456 200 # blockread amode address count
    mbltfifo a32 0x12345678 20 # fiforead amode address count

* block read with repetitions read from a register
    <command> <register_amode> <register_dwidth> <register_address> <register_count_mask> <block_amode> <block_address>
    Commands: bltcount bltfifocount, mbltcount, mbltfifcount

* short syntax for writes
    write, a32, d16: 0x12345678 0xabcd

* Current simple format:
    0x1234 0xabcdabcd # comments to end of line
    # additional base address can be given to parseRegisterList and is added to each parsed address
