#include "{{export_header_file}}"
#include <cmath>
#include <fstream>
#include <iostream>

using std::cout;
using std::endl;

int main(int argc, char *argv[])
{
    std::string inputFilename;

    if (argc < 2)
    {
        inputFilename = "{{export_data_basename}}";
        cout << "Using generated input filename " << inputFilename << endl;
    }
    else
    {
        inputFilename = argv[1];
        cout << "Using filename from command line: " << inputFilename << endl;
    }

    size_t eventsRead = 0;

    std::ifstream input;
    input.open(inputFilename, std::ios::in | std::ios::binary);

    {{struct_name}} event;

    while (input.good())
    {
        read(input, event);

        if (!input.good())
            break;

        size_t eventNumber = eventsRead++;

        cout << "Event #" << eventNumber << endl;

        for (size_t arrayIndex = 0;
             arrayIndex < event.getArrayCount();
             arrayIndex++)
        {
            std::string arrayName   = event.getArrayName(arrayIndex);
            const double *arrayData = event.getArray(arrayIndex);
            size_t arrayDim         = event.getArrayDimension(arrayIndex);

            cout << "  Array #" << arrayIndex << ": ";

            for (size_t paramIndex = 0;
                 paramIndex < arrayDim;
                 paramIndex++)
            {
                if (!std::isnan(arrayData[paramIndex]))
                {
                    cout << "[" << paramIndex << "] = " << arrayData[paramIndex] << ", ";
                }
            }

            cout << endl;
        }
        cout << endl;
    }

    cout << endl
        << "Read " << eventsRead << " events from "
        << inputFilename << "." << endl;
}
{{!
vim:ft=cpp
}}
