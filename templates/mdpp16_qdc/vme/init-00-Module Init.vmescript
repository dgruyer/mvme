## Parameters for MDPP-16_QDC

# Operation Mode
# ############################################################################
# tdc_resolution
0x6042  5           # 0 ->  24 ps = 25 ns / 1024
                    # 1 ->  49 ps = 25 ns / 512
                    # 2 ->  98 ps = 25 ns / 256
                    # 3 -> 195 ps = 25 ns / 128
                    # 4 -> 391 ps = 25 ns / 64
                    # 5 -> 781 ps = 25 ns / 32

# output_format
0x6044  3           # 0 -> time and long integral
                    # 1 -> long integral only (QDC-mode)
                    # 2 -> time only (TDC mode)
                    # 3 -> long integral, short integral and time

# adc_resolution
#0x6046             # always 4k

# first_hit
0x605C  1           # 0 -> transmit all hits per channel in the window
                    # 1 -> only transmit first hit per channel in the window

# Trigger Setup
# ############################################################################
# win_start
#0x6050  16368      # Window of interest start time relative to trigger.
                    # win_start = (time_delay_ns / 1.56) + 0x3FFF
                    # with time_delay_ns in range [-25560 ns, +25560 ns]
                    # < 0 -> window starts before trigger
                    # > 0 -> window is delayed

# win_width (14 bit value)
0x6054  32          # win_width = (win_width_ns / 1.56 ns)
                    # Unit: ns, Range: [0, 25560 ns]

# trig_source
# Defines the trigger which creates the window of interest.
0x6058  0x100       # 0x001 -> trigger 0 input
                    # 0x002 -> trigger 1 input
                    # 0x100 -> whole bank (self trigger; all channels)
                    # single channel: trig_source = 128 + (chan * 4)
                    #                 with channel in 0..15
                    # +-------------+--------------------+---------+
                    # | Whole bank  |     16_channels    |  trig   |
                    # |   2 bits    |       6 bits       | 2 bits  |
                    # +============================================|
                    # |      0 | B0 | active | 0 | Chan  | T1 | T0 |
                    # |        |    |        |   | [3:0] |    |    |
                    # +--------+----+--------+---+-------+----+----+

# trig_source_2
0x605A  0           # When trig_source == 0, this register allows to set any
                    # number of individual channels to create the trigger.
                    # Bit 0 corresponds to channel 0, bit 15 corresponds to channel 15.
                    # Setting a bit uses the channel as a trigger source.

# trigger_output
# NIM1 trigger output
0x605E  0x100       # 0x100 -> whole bank (OR of all channels)
                    # single channel: trigger_output = 128 + (chan * 4)
                    #                 with channel in 0..15

# I/O
# ############################################################################
# Sorted from top to bottom, as on the front panel.

# ECL3 input
0x6060  0x00        # 0x00 -> off
                    # 0x01 -> trig0, terminated
                    # 0x11 -> trig0, unterminated
# ECL2 input
0x6062  0x00        # 0x00 -> off
                    # 0x01 -> sync, terminated
                    # 0x11 -> sync, unterminated
                    # 0x02 -> trig1, terminated
                    # 0x12 -> trig1, unterminated
# ECL1 input
0x6064  0x00        # 0x00 -> off
                    # 0x01 -> reset, terminated
                    # 0x11 -> reset, unterminated
# ECL0 output
0x6066  0x00        # 0x0 -> off
                    # 0x4 -> busy
                    # 0x8 -> data in buffer above threshold 0x6018 (= Data ready)
                    # 0x9 -> events in buffer above threshold 0x601E

# NIM4 input
0x6068  1           # 0 -> off
                    # 1 -> trig0_in

# NIM3
# Note: Front panel Monitor setting overrides this setting (becomes mon1
# output).
0x606A  0           # 0 -> off
                    # 2 -> sync in (also set CTRA.ts_sources (0x6096)!)
# NIM2
# Note: Front panel Monitor setting overrides this setting (becomes mon0
# output).
0x606C  1           # 0 -> off
                    # 1 -> trig1_in
                    # 2 -> reset

# NIM1 is always trigger output

# NIM0
0x6074  1           # 0 -> off
                    # 1 -> CBus
                    # 4 -> busy_out (== FIFO full or ACQ stopped)
                    # 8 -> data in buffer above threshold 0x6018
                    # 9 -> events in buffer above threshold 0x601E

# Internal Test Pulser
# ############################################################################
# pulser_status
0x6070  0           # 0 -> off, 1 -> on

# pulser_amplitude
0x6072  400         # maximum amplitude: 0xFFF = 4095

# Timestamp/Event Counters: CTRA, CTRB
# ############################################################################
# ts_sources
0x6096  0b00        # bit 0: frequency source (0 -> VME, 1 -> external)
                    # bit 1: external reset enable

# ts_divisor (16 bit value)
0x6098  1           # timestamp = time / ts_divisor
                    # 0 means division by 65536

# stop_ctr
#0x60AE  0b00       # bit 0: stop CTRB (time_0, time_1, time_2)
                    # bit 1: stop CTRA (ts_counter_lo, ts_counter_hi)
                    # with 0 -> run, 1 -> stop counter

# Front end settings
# ############################################################################
# select_chan_pair
0x6100  8       # 0 -> channel 0, 1
                # 1 -> channel 2, 3
                # ...
                # 8 -> all channels (set to common values)

# signal_width (10 bit value)
0x6110  30      # FWHM in ns

# input_amplitude (16 bit value)
0x6112  1000    # input amplitude 0 to peak in mV

# jumper_range
0x6114  3000    # range printed on jumper top in mV

# qdc_jumper
0x6116  0       # 0 -> no, 1 -> yes

# integration_long
0x6118  10      # 2..128 in multiples of 12.5 ns

# integration_short
0x611A  1       # 2..31 in multiples of 12.5 ns,
                # must be < integration_long.

# threshold0 (15 bit value for the even channel)
0x611C  0x4FF   # 1..0xFFFF, example: 0x200 -> 0.8%

# threshold1 (15 bit value for the odd channel)
0x611E  0x4FF   # 1..0xFFFF, example: 0x200 -> 0.8%

# reset_time (common for both selected channels)
0x6128  20      # multiple of 12.5 ns

# long_gain_correction
0x612A  1024    #  256 -> divide by 4
                # 4096 -> multiply by 4
                # 1024 -> neutral

# tf_gain_correction
0x612C  1024    #  256 -> divide by 4
                # 4096 -> multiply by 4
                # 1024 -> neutral

# short_gain_correction
0x612E  1024    #  256 -> divide by 4
                # 4096 -> multiply by 4
                # 1024 -> neutral

# shaping_time (common for both selected channels)
0x6124  200     # FWHM-width in multiples of 12.5ns (200 == 2.5 us)
                # range 8..2000 (100 ns to 25 us)

# Channel / Channel Pair Front end settings
# ############################################################################

/*
# channels (0, 1)
0x6100       0
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
# channels (2, 3)
0x6100       1
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
# channels (4, 5)
0x6100       2
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
# channels (6, 7)
0x6100       3
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
# channels (8, 9)
0x6100       4
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
# channels (10, 11)
0x6100       5
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
# channels (12, 13)
0x6100       6
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
# channels (14, 15)
0x6100       7
0x6110      16    # signal_width
0x6112    1024    # input_amplitude
0x6114    3072    # jumper_range
0x6116       0    # qdc_jumper
0x6118      16    # integration_long
0x611A       2    # integration_short
0x611C  0x00ff    # threshold0
0x611E  0x00ff    # threshold1
0x6128      32    # reset_time
0x612A    1024    # long_gain_correction
0x612C    1024    # tf_gain_correction
0x612E    1024    # short_gain_correction
*/
