/* mvme - Mesytec VME Data Acquisition
 *
 * Copyright (C) 2016-2018 mesytec GmbH & Co. KG <info@mesytec.com>
 *
 * Author: Florian LÃ¼ke <f.lueke@mesytec.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
#ifndef __MVME_LISTFILE_H__
#define __MVME_LISTFILE_H__


#include "typedefs.h"
#include "libmvme_export.h"

namespace ListfileSections
{
    enum SectionType
    {
        /* The config section contains the mvmecfg as a json string padded with
         * spaces to the next 32 bit boundary. If the config data size exceeds
         * the maximum section size multiple config sections will be written at
         * the start of the file. */
        SectionType_Config      = 0,

        /* Readout data generated by one VME Event. Contains module data
         * subsections. */
        SectionType_Event       = 1,

        /* Last section written to a listfile before closing the file. Used for
         * verification purposes. */
        SectionType_End         = 2,

        /* Marker section written once at the start of a run and then once per
         * elapsed second. */
        SectionType_Timetick    = 3,

        SectionType_Pause       = 4,

        /* Max section type possible. */
        SectionType_Max         = 7
    };
};

static const u32 CurrentListfileVersion = 2;

struct LIBMVME_EXPORT ListfileConstants
{
    u32 Version;
    char FourCC[4];

    int FirstSectionOffset;

    // Applicable for all section headers
    u32 SectionMaxWords;
    u32 SectionMaxSize;
    u32 SectionTypeMask;
    int SectionTypeShift;
    u32 SectionSizeMask;
    int SectionSizeShift;

    // vme crate index stored in SectionType_Event headers
    int CrateIndexMask;
    int CrateIndexShift;

    // vme event index stored in SectionType_Event headers
    int EventIndexMask ;
    int EventIndexShift;

    // module data subsections contained in event sections
    u32 ModuleDataMaxWords;
    u32 ModuleDataMaxSize;
    u32 ModuleDataSizeMask;
    int ModuleDataSizeShift;
    u32 ModuleTypeMask;
    int ModuleTypeShift;

    // Mask and shift operations for section and module data headers
    u32 section_size(u32 sectionHeader) const;
    u32 section_type(u32 sectionHeader) const;
    u32 crate_index(u32 eventSectionHeader) const;
    u32 event_index(u32 eventSectionHeader) const;
    u32 module_data_size(u32 moduleDataHeader) const;
    u32 module_type(u32 moduleDataHeader) const;
};

extern const ListfileConstants ListfileConstantsTable[CurrentListfileVersion + 1];

LIBMVME_EXPORT const ListfileConstants &listfile_constants(u32 version = CurrentListfileVersion);

#endif /* __MVME_LISTFILE_H__ */
