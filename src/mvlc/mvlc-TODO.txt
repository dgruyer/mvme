* The windows usb::Impl::read() and the udp::Impl::read() calls can take longer than the
  user specified timeout as they are issuing multiple read/receive calls internally, each
  using the previously set timeout value. Document this behaviour and/or work around it by
  taking into account how much time has elapsed between each of the individual
  read/receive calls.

* UDP: make read() use multiple recv() calls internally.
* Having libmvme_mvlc link against libmvme will lead to problems in the near future:
  Code from libmvme/mvme will want to access things provided by libmvme_mvlc...

* Build a tool to verify incoming readout data. Check headers and pointers. Test this with
  different incoming event sizes.
  For the first pass it's ok to do this offline.

* Low Level MVLC Ethernet Debugging:

    ifconfig enp2s0 192.168.42.1 netmask 255.255.255.0 up
    arp -i enp2s0 -s 192.168.42.2 ab:cd:12:34:56:78

  Start wireshark or tcpdump in a second terminal window
    sudo tcpdump -i enp2s0 -vvXX

  Use netcat to generate an UDP packet containing "Hello, World!" as the payload.
    echo "Hello, world!" | netcat -u 192.168.42.2 9000

  To delete the arp entry:
    arp -i enp2s0 -d 192.168.42.2
