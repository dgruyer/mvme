============================================================
Building mvme2 under ubuntu-18.04 amd64
============================================================

Instructions updated for ubuntu-18.04 and the mvme master branch as of
Fr 25. Sep 09:33:07 CEST 2020

The starting point is a default installation of ubuntu-18.04 with all updates
installed.

* Install additional dependencies:

  sudo apt-get install libxcb-xinerama0 mesa-common-dev zlib1g-dev libboost-dev
       libqwt-qt5-dev libusb-dev libquazip5-dev libgl1-mesa-dev git build-essential

* Install Qt:

  mvme requires qt-5.13 or later which is not shipped with ubuntu.
  To get an up-to-date version go to https://www.qt.io/download and download the
  Qt Installer. You also need a qt.io account to be able to download Qt binaries.

  Make the installer executable via `chmod 755
  qt-unified-linux-x64-3.2.3-online.run' and start it. I used $HOME/Qt as the
  installation location. In the software selection tree under 'Developer and
  Designer Tools' make sure CMake and Ninja are checked. Under Qt-5.15.1 select
  'Desktop gcc 64-bit' and start the installation.

* Checkout mvme and submodules:

  git clone https://github.com/flueke/mvme
  cd mvme
  git submodule init
  git submodule update --recursive

* Building with QtCreator:

  - Start ~/Qt/Tools/QtCreator/bin/qtcreator
  - Use 'File -> Open File or Project' navigate to the mvme directory and open
    the CMakeLists.txt.
  - Select the 'Desktop QT 5.15.1' kit and click 'Configure Project'.
  - Use 'Build -> Build Project "mvme"' to start the compilation process.
  - Run mvme using the green arrow in the bottom left of the window.

* Building from the command line:

  The environment has to be modified for the shell and cmake to work properly.
  Add the following to your ~/.bashrc file:

  export PATH="${HOME}/Qt/5.15.1/gcc_64/bin:${PATH}"
  export PATH="${HOME}/Qt/Tools/CMake/bin:${PATH}"
  export PATH="${HOME}/Qt/Tools/Ninja:${PATH}"
  export LD_LIBRARY_PATH="${HOME}/Qt/5.15.1/gcc_64/lib:${LD_LIBRARY_PATH}"
  export LD_LIBRARY_PATH="${HOME}/Qt/Tools/CMake:${LD_LIBRARY_PATH}"

  Then `source ~/.bashrc' or start a new shell.

  cd ~/mvme
  mkdir build
  cd build
  cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
  ninja
  ./mvme

* Optional tools:
  - sphinx-doc and a latex distribution for building the docs
  - doxygen for the mesytec-mvlc library documentation
