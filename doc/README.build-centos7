Dependencies required to run the mvme binaries for CentOS7
==========================================================

* Starting state:
  Netinstall of CentOS7 x86_64 using the Gnome Desktop choice.

* Downloads:
  - mvme package for CentOS: https://mesytec.com/downloads/

* Dependencies:
  yum install epel-release
  yum install qt5-qtwebsockets qt5-qtsvg quazip-qt5 libusb

Extract the mvme archive and start via `./mvme'

On my test machine the UI did not look good at all: buttons are huge and all
over the place, smaller fonts are barely readable, layout spacing is too large,
etc. This seems to be caused by the gnome/qt/gtk/whatever theme engine. When
starting mvme on a remote display using ssh with X-forwarding these issues
disappear.


Compilation instructions for mvme under CentOS7
==========================================================

The steps below build the mvme binary and required libraries. The documentation
will not be built (the python package `sphinx' and a latex distribution are
required to build the docs).

* Starting state:
  Netinstall of CentOS7 x86_64 using the Gnome Desktop choice.

* Downloads:
  - qwt: https://sourceforge.net/projects/qwt/files/qwt/6.1.3/
  - mvme source code: https://mesytec.com/downloads/ or https://github.com/flueke/mvme

* Packages to be installed via `yum install':

  yum install centos-release-scl epel-release
  yum install devtoolset-6
  scl enable devtoolset-6 bash
  yum install cmake3 git gcc gcc-c++ make qt5-qtbase-devel \
      qt5-qtwebsockets-devel qt5-qtsvg-devel qt5-qttools-devel quazip-qt5-devel \
      boost-devel zlib-devel libusb-devel

* Download qwt-6.1.3 from https://sourceforge.net/projects/qwt/files/qwt/6.1.3/,
  unpack the tarball, edit qwtconfig.pri, create a build directory, cd into the
  build directory and build it:

  tar xf qwt-6.1.3.tar.bz2
  mkdir build-qwt
  cd build-qwt
  qmake-qt5 ../qwt-6.1.3
  make -j4
  sudo make install

  This will build and install qwt into /usr/local/qwt-6.1.3/

* Unpack the mvme sources. Create a build directory, run cmake, then make:

  tar xf mvme-0.9.5-1.tar.bz2
  mkdir build-mvme
  cd build-mvme
  cmake3 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PATH=${HOME}/local/mvme ../mvme2
  make -j4
  make install

  The above steps will install the mvme binaries and libraries and the vme
  module template files into the specified CMAKE_INSTALL_PREFIX.
