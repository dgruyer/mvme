## Parameters for MDPP-16_SCP

# Operation Mode
# ############################################################################
# tdc_resolution
0x6042  5           # 0 ->  24 ps = 25 ns / 1024
                    # 1 ->  49 ps = 25 ns / 512
                    # 2 ->  98 ps = 25 ns / 256
                    # 3 -> 195 ps = 25 ns / 128
                    # 4 -> 391 ps = 25 ns / 64
                    # 5 -> 781 ps = 25 ns / 32

# adc_resolution
0x6046  0           # number of valid output bits for maximum amplitude
                    # 0 -> 16 bits
                    # 1 -> 15 bits
                    # 2 -> 14 bits
                    # 3 -> 13 bits
                    # 4 -> 12 bits

# first_hit
0x605C  1           # 0 -> transmit all hits per channel in the window
                    # 1 -> only transmit first hit per channel in the window

# Trigger Setup
# ############################################################################
# win_start
#0x6050  16368      # Window of interest start time relative to trigger.
                    # win_start = (time_delay_ns / 1.56) + 0x3FFF
                    # with time_delay_ns in range [-25560 ns, +25560 ns]
                    # < 0 -> window starts before trigger
                    # > 0 -> window is delayed

# win_width (14 bit value)
0x6054  32          # win_width = (win_width_ns / 1.56 ns)
                    # Unit: ns, Range: [0, 25560 ns]

# trig_source
# Defines the trigger which creates the window of interest.
0x6058  0x100       # 0x001 -> trigger 0 input
                    # 0x002 -> trigger 1 input
                    # 0x100 -> whole bank (self trigger; all channels)
                    # single channel: trig_source = 128 + (chan * 4)
                    #                 with channel in 0..15
                    # +-------------+--------------------+---------+
                    # | Whole bank  |     16_channels    |  trig   |
                    # |   2 bits    |       6 bits       | 2 bits  |
                    # +============================================|
                    # |      0 | B0 | active | 0 | Chan  | T1 | T0 |
                    # |        |    |        |   | [3:0] |    |    |
                    # +--------+----+--------+---+-------+----+----+

# trig_source_2
0x605A  0           # When trig_source == 0, this register allows to set any
                    # number of individual channels to create the trigger.
                    # Bit 0 corresponds to channel 0, bit 15 corresponds to channel 15.
                    # Setting a bit uses the channel as a trigger source.

# trigger_output
# NIM1 trigger output
0x605E  0x100       # 0x100 -> whole bank (OR of all channels)
                    # single channel: trigger_output = 128 + (chan * 4)
                    #                 with channel in 0..15

# I/O
# ############################################################################
# Sorted from top to bottom, as on the front panel.

# ECL3 input
0x6060  0x00        # 0x00 -> off
                    # 0x01 -> trig0, terminated
                    # 0x11 -> trig0, unterminated
# ECL2 input
0x6062  0x00        # 0x00 -> off
                    # 0x01 -> sync, terminated
                    # 0x11 -> sync, unterminated
                    # 0x02 -> trig1, terminated
                    # 0x12 -> trig1, unterminated
# ECL1 input
0x6064  0x00        # 0x00 -> off
                    # 0x01 -> reset, terminated
                    # 0x11 -> reset, unterminated
# ECL0 output
0x6066  0x00        # 0x0 -> off
                    # 0x4 -> busy
                    # 0x8 -> data in buffer above threshold 0x6018 (= Data ready)
                    # 0x9 -> events in buffer above threshold 0x601E

# NIM4 input
0x6068  1           # 0 -> off
                    # 1 -> trig0_in

# NIM3
# Note: Front panel Monitor setting overrides this setting (becomes mon1
# output).
0x606A  0           # 0 -> off
                    # 2 -> sync in (also set CTRA.ts_sources (0x6096)!)
# NIM2
# Note: Front panel Monitor setting overrides this setting (becomes mon0
# output).
0x606C  1           # 0 -> off
                    # 1 -> trig1_in
                    # 2 -> reset

# NIM1 is always trigger output

# NIM0
0x6074  1           # 0 -> off
                    # 1 -> CBus
                    # 4 -> busy_out (== FIFO full or ACQ stopped)
                    # 8 -> data in buffer above threshold 0x6018
                    # 9 -> events in buffer above threshold 0x601E

# Internal Test Pulser
# ############################################################################
# pulser_status
0x6070  0           # 0 -> off, 1 -> on

# pulser_amplitude
0x6072  400         # maximum amplitude: 0xFFF = 4095

# Timestamp/Event Counters: CTRA, CTRB
# ############################################################################
# ts_sources
0x6096  0b00        # bit 0: frequency source (0 -> VME, 1 -> external)
                    # bit 1: external reset enable

# ts_divisor (16 bit value)
0x6098  1           # timestamp = time / ts_divisor
                    # 0 means division by 65536

# stop_ctr
#0x60AE  0b00       # bit 0: stop CTRB (time_0, time_1, time_2)
                    # bit 1: stop CTRA (ts_counter_lo, ts_counter_hi)
                    # with 0 -> run, 1 -> stop counter

# Front end settings
# ############################################################################
# select_chan_pair
0x6100  8       # 0 -> channel 0, 1
                # 1 -> channel 2, 3
                # ...
                # 8 -> all channels (set to common values)
# tf_int_diff
0x6110  2       # TF integration/differentiation time common for both selected channels
                # range 2..125 (25 ns to 1.6 us, in multiples of 12.5 ns)

# PZ0 (signal_decay_time0 for selected channel0)
0x6112  0xffff  # range 64..64k, 0.8 us to 800 us and infinite
                # multiples of 12.5 ns

# PZ1 (signal_decay_time1 for selected channel1)
0x6114  0xffff  # same as signal_decay_time0

# Gain (common for both selected channels)
0x611A  200     # gain * 100
                # range 1..250
                # 100   -> gain = 1
                # 25000 -> gain = 250
                #
# threshold0
0x611C  2000  # 0..64k, 64k corresponds to full range
# threshold1
0x611E  0x00ff  # same as threshold0

# shaping_time (common for both selected channels)
0x6124  200     # FWHM-width in multiples of 12.5ns (200 == 2.5 us)
                # range 8..2000 (100 ns to 25 us)

# BLR - base line restorer (common for both selected channels)
# FIXME: 1 soft, 2 strict or the other way around? readout concept and manual contain different values
0x6126  2       # 0 -> off
                # 1 -> strict (int. time = 4 shaping times)
                # 2 -> soft   (int. time = 8 shaping times)

# reset_time (common for both selected channels)
0x6128  16      # multiple of 12.5 ns, min = 16 (== 200ns)

# signal_rise_time (common for both selected channels)
0x612A  0       # multiple of 12.5 ns (7 bit value)
                # 0 -> For Si-detectors, constant rise time detectors: shorted dead time.
                # For germanium detectors with position dependent rise time set
                # to largest possible signal rise time.
                # This results in highest resolution and ballistic loss correction.

# Channel / Channel Pair Front end settings
# ############################################################################

/*
# channels (0, 1)
0x6100       0
0x611C  0x00FF    # threshold 0
0x611E  0x00FF    # threshold 1
0x6112  0xFFFF    # PZ 0
0x6114  0xFFFF    # PZ 1
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
# channels (2, 3)
0x6100       1
0x611C  0x00FF    # threshold 2
0x611E  0x00FF    # threshold 3
0x6112  0xFFFF    # PZ 2
0x6114  0xFFFF    # PZ 3
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
# channels (4, 5)
0x6100       2
0x611C  0x00FF    # threshold 4
0x611E  0x00FF    # threshold 5
0x6112  0xFFFF    # PZ 4
0x6114  0xFFFF    # PZ 5
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
# channels (6, 7)
0x6100       3
0x611C  0x00FF    # threshold 6
0x611E  0x00FF    # threshold 7
0x6112  0xFFFF    # PZ 6
0x6114  0xFFFF    # PZ 7
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
# channels (8, 9)
0x6100       4
0x611C  0x00FF    # threshold 8
0x611E  0x00FF    # threshold 9
0x6112  0xFFFF    # PZ 8
0x6114  0xFFFF    # PZ 9
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
# channels (10, 11)
0x6100       5
0x611C  0x00FF    # threshold 10
0x611E  0x00FF    # threshold 11
0x6112  0xFFFF    # PZ 10
0x6114  0xFFFF    # PZ 11
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
# channels (12, 13)
0x6100       6
0x611C  0x00FF    # threshold 12
0x611E  0x00FF    # threshold 13
0x6112  0xFFFF    # PZ 12
0x6114  0xFFFF    # PZ 13
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
# channels (14, 15)
0x6100       7
0x611C  0x00FF    # threshold 14
0x611E  0x00FF    # threshold 15
0x6112  0xFFFF    # PZ 14
0x6114  0xFFFF    # PZ 15
0x6110      20    # tf_int_diff
0x611A    2000    # gain
0x6124     160    # shaping_time
0x6126       2    # BLR
0x6128    1000    # reset_time
0x612A      80    # signal_rise_time
*/
