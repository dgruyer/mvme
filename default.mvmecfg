{
    "DAQConfig": {
        "enabled": true,
        "events": [
            {
                "enabled": true,
                "id": "{44eaf59f-1169-43d1-af2b-ee722e686089}",
                "irqLevel": 1,
                "irqVector": 0,
                "modules": [
                    {
                        "baseAddress": 0,
                        "enabled": true,
                        "id": "{0d048dcf-d55b-4483-bf0c-fb66ae1c3fa1}",
                        "name": "mdpp16",
                        "type": "mdpp16",
                        "vme_scripts": {
                            "parameters": {
                                "enabled": true,
                                "id": "{75e45a76-bd88-41f7-9ed4-4814c28d367d}",
                                "name": "Module Init",
                                "vme_script": "## Parameters for MDPP-16\n\n## set window of interest, multiples of 1.56ns\n0x6050 0x3FF8\t  #Window start: -8 = -12.5ns  before trigger\n0x6054 0x10\t#Window width: 16 = 25ns\n\n#Timig resolution\n0x6042 0\t#5 ? 781 ps = 25 ns / 32\n\t#4 ? 391 ps = 25 ns / 64\n\t#3 ? 195 ps = 25 ns / 128\n\t#2 ? 98   ps = 25 ns / 256\n\t#1 ? 49   ps = 25 ns / 512\n\t#0 ? 24   ps = 25 ns / 1024\n\n#Amplitude resolution\n0x6046 0\t#for mvme2  fixed = 0 (16 bits) at the moment. Do not change\n\n## Trigger source\n0x6058 0x100\t# Trigger {whole bank,single channel, chan_address[4:0], trig1, trig0}\n\t# 0x100=whole bank, 0x001 = trig0, 0x002=trig1, 0x084 = chan1; \n\n##Frontend setting (filter-parameter, gain, PZ..)\n0x6100 0x8\t# 8=send following data to all channels, 0..7 send to crresponding channel pair\n0x6110 4\t# TF time, multiples of 12.5ns;  4: 50ns\n0x611A 500\t# gain*100; 500 -> gain = 5\n0x611C  0xFF\t#threshold0:  #0 to 64k (65535) .  64 k corresponds to full range.\n0x611E  0xFF\t#threshold1\n0x6124 200\t# Shaping time FWHM, multiples of 12.5ns; 200-> 2.5us\n0x6126  2\t#BLR: setting, \t   0 = off, \n\t\t#1 = strict  ( int. time = 4 shaping times), \n\t\t#2 = soft (int. time = 8 shaping times)\n0x6128 100 \t#reset_time, multiple od 12.5ns,  # common for 2 channels  (min 16 = 200ns)\n0x612A 0\t#signal_rise_ time, multiple of 12.5ns \n   \t#-default = 0,  for Si-detectors, constant rise time detectors \n\t#-> shortest dead time\n    \t#-for germanium detectors with position dependent rise time, \n        \t#set to largest signal rise time.\n       \t#This results in highest resolution and ballistic loss correction.\n\n# Pulser setting; Window of interest has to include 0+- 3ns\n0x6070 1\t# 3= pulser on , 0=pulser off\n0x6072 2000\t# pulser amplitude, 0...2047\n"
                            },
                            "readout": {
                                "enabled": true,
                                "id": "{746e0f8d-1cca-4105-8eec-090625a32e66}",
                                "name": "Readout",
                                "vme_script": "# BLT readout until BERR or number of transfers reached\nbltfifo a32 0x0000 10000\n"
                            },
                            "readout_settings": {
                                "enabled": true,
                                "id": "{15e8ac9c-0f84-4bcd-a1d6-4c10fea0fb67}",
                                "name": "VME Interface Settings",
                                "vme_script": "# Settings related to the readout loop\n0x6010  1           # irq level\n0x6012  0           # irq vector\n#0x601C 1\t        # 1 = specifies number of words\n#0x6018  100 \t    # IRQ- FIFO threshold, words\n0x601C 0\t        # 0= following register specifies number of events\n0x601E  1           # IRQ- FIFO threshold, events\n\n\n# multi event mode: \n0x6036  3          # multi event mode: 1= single event, 3= multi event, number of words\n\t# b= multievent, transmits number of events specified \n0x601A  1     \t# multi event mode =3: Berr is emitted when more ore eqal the \n\t# specified number of words are sent and \"End Of Event\" is detected.\n\t # multi event mode =b: Berr is emitted when\n\t# specified number of events are transmitted  is detected.\n\n# MCST\n0x6020 0x80     # Enable multicast\n0x6024 0xBB     # Set 8 high bits of MCST address\n"
                            },
                            "reset": {
                                "enabled": true,
                                "id": "{01baea84-bd95-4644-9c2d-c98172ddeff0}",
                                "name": "Module Reset",
                                "vme_script": "# Reset the module\n0x6008 1\nwait 250ms\n"
                            }
                        }
                    }
                ],
                "name": "event0",
                "scalerReadoutFrequency": 0,
                "scalerReadoutPeriod": 0,
                "triggerCondition": 2,
                "vme_scripts": {
                    "daq_start": {
                        "enabled": true,
                        "id": "{093acada-33f8-49d9-980b-e783a08ab070}",
                        "name": "DAQ Start",
                        "vme_script": "# Start acquisition sequence using the default multicast address 0xbb\nwriteabs a32 d16 0xbb00603a      0   # stop acq\nwriteabs a32 d16 0xbb006090      3   # reset CTRA and CTRB\nwriteabs a32 d16 0xbb00603c      1   # FIFO reset\nwriteabs a32 d16 0xbb00603a      1   # start acq\nwriteabs a32 d16 0xbb006034      1   # readout reset\n"
                    },
                    "daq_stop": {
                        "enabled": true,
                        "id": "{b54481fb-e452-4a21-9857-96b042ea74f1}",
                        "name": "DAQ Stop",
                        "vme_script": "writeabs a32 d16 0xbb00603a     0   # stop acquisition \n"
                    },
                    "readout_end": {
                        "enabled": true,
                        "id": "{741ad526-661e-4c54-ab67-8764c4140061}",
                        "name": "Cycle End",
                        "vme_script": "# Commands executed at the end of each readout cycle\n# Do a multicast write of the readout_reset register\nwriteabs a32 d16 0xbb006034      1   # readout reset\n"
                    },
                    "readout_start": {
                        "enabled": true,
                        "id": "{93d3770e-e9b6-478a-af18-7f366ee32ec8}",
                        "name": "Cycle Start",
                        "vme_script": "# Commands executed at the start of each readout cycle\n"
                    }
                }
            }
        ],
        "id": "{c0792602-7f19-467b-bb26-4cc3d3f875d5}",
        "listFileOutputDirectory": "",
        "listFileOutputEnabled": false,
        "name": "",
        "vme_script_lists": {
        }
    }
}
