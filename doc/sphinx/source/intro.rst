##################################################
Introduction
##################################################
**mvme** is a VME Data Acquisition solution by **mesytec** aimed at small scale nuclear physics
experiments involving a single VME controller. The goal of this project is to provide an easy to
setup, easy to use, cross-platform data acquisition system with basic data visualization and
analysis capabilities.

===================
Features
===================

* High-rate, low-latency VME module readout
* Readout rates of up to 15 MB/s
* Easy creation and configuration of the VME setup

  * Multiple event triggers are possible (NIM, IRQ, periodic readout)
  * Multiple modules can be read out per trigger
  * Flexible VME module setup using configuration scripts

* Live histogramming of readout data (1D and 2D)
* Flexible VME module data extraction
* Graphical analysis UI
* Optional compression of output listfiles
* Replays of recorded listfile data

===================
Overview & Features
===================

.. figure:: images/mvme_architecure.png
   :width: 100%

   mvme architecture

.. warning:: TODO
   Describe what mvme is about in broad terms.
   The detailed stuff goes into the architecture section below.

**mvme** achieves high-rate, low-latency readout by using the VM-USBs
autonomous DAQ mode. In this mode the controller executes lists of commands
(**trigger stacks**) upon activation of a specific trigger condition. Data
generated by the execution of a trigger stack is buffered and then sent over
the USB to the controlling computer.

**mvme** builds trigger stacks containing module readout commands from a set of
user supplied VME configuration files.

==================================================
System Requirements
==================================================

* Any recent 64-bit Linux distribution or a 64-bit version of Windows XP or later.

  32-bit builds are possible but not recommended as the limited address space can be quickly used up
  when creating multiple histograms.
* **WIENER VM-USB** VME Controller
* libusb-0.1 (Linux) / libusb-win32 (Windows)

  The windows installer can optionally run a program to handle the driver installation (Zadig).

.. note::
  It is also possible to compile builds using libusb-1.0 instead of the old libusb-0.1 API.

.. TODO Refer to the build instructions for 32-bit builds here once those build instructions are written.

* At least 4 GB RAM is recommended.
* Two or more processor cores are recommended as **mvme** makes use of 3
  logical cores (readout, analysis and GUI).



.. include:: installation.rstinc
.. include:: quickstart.rstinc
