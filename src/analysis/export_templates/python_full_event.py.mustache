# This file was auto generated by mvme-{{mvme_version}} on {{export_date}}.

import struct

class {{struct_name}}:
    def __init__(self):
{{#array_info}}
        self.{{variable_name}} = []
{{/array_info}}

    ArrayCount = {{array_count}}

    class Limits:
{{#array_info}}
        {{variable_name}} = [
{{#limits}}
            ( {{lower_limit}}, {{upper_limit}} ),
{{/limits}}
        ]
{{/array_info}}

    ArrayDimensions = [
{{#array_info}}
        {{dimension}},
{{/array_info}}
    ]

    ArrayNames = [
{{#array_info}}
        "{{analysis_name}}",
{{/array_info}}
    ]

    UnitLabels = [
{{#array_info}}
        "{{unit}}",
{{/array_info}}
    ]

    def getArray(self, arrayIndex):
{{#array_info}}
        if arrayIndex == {{index}}:
            return self.{{variable_name}}
{{/array_info}}
        return None

    @staticmethod
    def read(inputObject):
        try:
            result = {{struct_name}}()
{{#array_info}}
            fmt   = "=%ud" % (result.ArrayDimensions[{{index}}])
            size  = struct.calcsize(fmt)
            result.{{variable_name}} = struct.unpack(fmt, inputObject.read(size))
{{/array_info}}
            return result

        except struct.error:
            return None

{{!
vim:ft=python
}}
