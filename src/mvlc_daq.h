#ifndef __MVME_MVLC_DAQ_H__
#define __MVME_MVLC_DAQ_H__

#include "mvlc/mvlc_qt_object.h"
#include "vme_config.h"

namespace mesytec
{
namespace mvlc
{

using Logger = std::function<void (const QString &)>;

// The following steps are executed:
// - disable_all_triggers
// - reset_stack_offsets
// - setup_readout_stacks
// - enable_triggers
//
// Returns std::error_codes generated by the MVLC code in case of errors.
// Exceptions thrown by internal function calls are not caught but passed on to
// the caller (e.g. vme_script::ParseError).
std::error_code setup_mvlc(MVLCObject &mvlc, const VMEConfig &vmeConfig, Logger logger);

std::error_code enable_triggers(MVLCObject &mvlc, const VMEConfig &vmeConfig);
std::error_code disable_all_triggers(MVLCObject &mvlc);
std::error_code reset_stack_offsets(MVLCObject &mvlc);
std::error_code setup_readout_stacks(MVLCObject &mvlc, const VMEConfig &vmeConfig,
                                     Logger logger);

} // end namespace mvlc
} // end namespace mesytec

#endif /* __MVME_MVLC_DAQ_H__ */
